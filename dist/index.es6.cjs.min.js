"use strict";function t(t){if(!t.match(/^[01]+$/))throw new Error(`Should be a binary string: ${t}`);const e=[];for(;e.length<Math.ceil(Math.log2(t.length+e.length+1));)e.push((1<<e.length)-1);const n=[...t],o=[n,...Array.from({length:e.length},(()=>[]))];for(let t=1;t<=n.length;t++){const n=(t>>>0).toString(2).padStart(e.length,"0");for(let t=1;t<=e.length;t++)o[t].push(n[n.length-t])}const r=[];for(let t=1;t<o.length;t++){let e=0;for(let r=0;r<n.length;r++)o[t][r]===n[r]&&"1"===n[r]&&e++;r.push(e%2)}return parseInt(r.reverse().join(""),2)-1}Object.defineProperty(exports,"__esModule",{value:!0}),console.log("Hamming.js"),exports.decode=function(e){const n=t(e),o="0"===e[n]?"1":"0",r=[...e];return r[n]=o,[...r].join("")},exports.detect=t,exports.encode=function(t){if(!t.match(/^[01]+$/))throw new Error(`Should be a binary string: ${t}`);const e=[];for(;e.length<Math.ceil(Math.log2(t.length+e.length+1));)e.push((1<<e.length)-1);const n=[...t];for(const t of e)n.splice(t,0,"0");const o=[n,...Array.from({length:e.length},(()=>[]))];for(let t=1;t<=n.length;t++){const n=(t>>>0).toString(2).padStart(e.length,"0");for(let t=1;t<=e.length;t++)o[t].push(n[n.length-t])}for(let t=1;t<o.length;t++){let r=0;for(let e=0;e<n.length;e++)o[t][e]===n[e]&&"1"===n[e]&&r++;n[e[t-1]]=(r%2).toString()}return n.join("")};
