!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)[""]=t[""]||{},t[""]["/dist/index"]={}))}(this,(function(t){"use strict";function e(t){if(!t.match(/^[01]+$/))throw new Error(`Should be a binary string: ${t}`);const e=[];for(;e.length<Math.ceil(Math.log2(t.length+e.length+1));)e.push((1<<e.length)-1);const n=[...t],o=[n,...Array.from({length:e.length},(()=>[]))];for(let t=1;t<=n.length;t++){const n=(t>>>0).toString(2).padStart(e.length,"0");for(let t=1;t<=e.length;t++)o[t].push(n[n.length-t])}const l=[];for(let t=1;t<o.length;t++){let e=0;for(let l=0;l<n.length;l++)o[t][l]===n[l]&&"1"===n[l]&&e++;l.push(e%2)}return parseInt(l.reverse().join(""),2)-1}console.log("Hamming.js"),t.decode=function(t){const n=e(t),o="0"===t[n]?"1":"0",l=[...t];return l[n]=o,[...l].join("")},t.detect=e,t.encode=function(t){if(!t.match(/^[01]+$/))throw new Error(`Should be a binary string: ${t}`);const e=[];for(;e.length<Math.ceil(Math.log2(t.length+e.length+1));)e.push((1<<e.length)-1);const n=[...t];for(const t of e)n.splice(t,0,"0");const o=[n,...Array.from({length:e.length},(()=>[]))];for(let t=1;t<=n.length;t++){const n=(t>>>0).toString(2).padStart(e.length,"0");for(let t=1;t<=e.length;t++)o[t].push(n[n.length-t])}for(let t=1;t<o.length;t++){let l=0;for(let e=0;e<n.length;e++)o[t][e]===n[e]&&"1"===n[e]&&l++;n[e[t-1]]=(l%2).toString()}return n.join("")},Object.defineProperty(t,"__esModule",{value:!0})}));
